datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum EntityType {
  user
  image
}

model User {
  id               Int     @id @default(autoincrement())
  uuid             String   @unique  @default(uuid())
  createdAt        DateTime?  @default(now())
  updatedAt        DateTime?  @updatedAt
  deletedAt        DateTime?
  version          Int?
  dsc              String?
  arabicLabel      String?
  type             EntityType @default(user)
  isActive         Boolean?   @default(true)
  note             String?
  createdById      Int?
  modifiedById     Int?
  deletedById      Int?
  first            String?
  middle           String?
  last             String?
  email            String?    @unique
  username         String?    @unique
  password         String?
  phoneNumber      String?
  isAdmin          Boolean?   @default(false)
  lastLogin        DateTime?
  profileImageId   Int?      @unique
  profileImage     Image?    @relation("ProfileImage", fields: [profileImageId], references: [id])
  createdImages    Image[]   @relation("CreatedBy")
  modifiedImages   Image[]   @relation("ModifiedBy")
  deletedImages    Image[]   @relation("DeletedBy")
}

model Image {
  id           Int      @id @default(autoincrement())
  uuid         String   @unique @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  deletedAt    DateTime?
  version      Int?
  dsc          String?
  arabicLabel  String?
  type         EntityType @default(image)
  isActive     Boolean  @default(true)
  note         String?
  createdById  Int?
  modifiedById Int?
  deletedById  Int?
  url          String
  fileType     String
  fileSize     Int
  width        Int
  height       Int
  createdBy    User?    @relation("CreatedBy", fields: [createdById], references: [id])
  modifiedBy   User?    @relation("ModifiedBy", fields: [modifiedById], references: [id])
  deletedBy    User?    @relation("DeletedBy", fields: [deletedById], references: [id])
  profileImageOf User? @relation("ProfileImage")
}
